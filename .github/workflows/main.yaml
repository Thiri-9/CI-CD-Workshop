name: CI_CD-Workshop
on:
  push:
    branches:
    - v[0-9]+.[0-9]+

jobs:
  slackNotification:
    name: Slack Notification
    if: (!contains(github.event.head_commit.message, '#NORUN'))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps: 
        # Checkout Code
        - name: Checkout code
          uses: actions/checkout@v3
        
        # Install Cosign
        - name: Install cosign
          uses: sigstore/cosign-installer@3.5.0
          with:
            cosign-release: 'v2.2.4'

        # Check Cosign version
        - name: Check version!
          run: cosign version

        # Slack Notification
        - name: Slack Notification
          if: ${{ success() }}
          uses: rtCamp/action-slack-notify@v2
          env:
              SLACK_TITLE: "Image build and signed"
              SLACK_MESSAGE: |
                Name: Thiri Naing
                Matriculation: A0290837U
                Email: e1327868@u.nus.edu
                GitHub: https://github.com/Thiri-9/CI-CD-Workshop.git
              SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
              SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

        # Get the requirements to build the image
        - name: Set up QEMU
          id: docker
          uses: docker/setup-qemu-action@v3

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        
        # Login to docker
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        
        - id: docker_meta
          uses: docker/metadata-action@v4.4.0
          with:
            images: thiri9/ci-cd_workshop
            tags: ${{ github.sha }}

        # Build and push the image
        - name: Build and push
          uses: docker/build-push-action@v5
          id: build-and-push
          with:
            push: true
            tags: ${{ steps.docker_meta.outputs.tags }}

        # Sign image with a key
        - name: Sign image with a key
          run: |
            images=""
            for tag in ${TAGS}; do
              images+="${tag}@${DIGEST}"
            done
            cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${images}
          env:
            TAGS: ${{ steps.docker_meta.outputs.tags }}
            COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
            COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
            DIGEST: ${{ steps.build-and-push.outputs.digest }}

        # Scan Vulnerability
        - name: Run Trivy vulnerabilities scanner in fs mode
          uses: aquasecurity/trivy-action@master
          with:
              scan-type: 'fs'
              ignore-unfixed: true
              format: 'table'
              output: 'text.txt'
              severity: CRITICAL
              exit-code: 1

        # Slack Notification
        # - name: Slack Notification
        #   if: ${{ failure() }}
        #   uses: rtCamp/action-slack-notify@v2
        #   env:
        #       SLACK_TITLE: "Image build and signed"
        #       SLACK_MESSAGE: "Failed scan report - Thiri Naing"
        #       SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        #       SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

        # # Upload file report
        # - name: file upload
        #   if: ${{ failure() }}
        #   uses: MeilCli/slack-upload-file@v3
        #   with:
        #     slack_token: ${{ secrets.SLACK_BOT_TOKEN }}
        #     channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
        #     content: 'file content'
        #     file_type: 'text'
        #     file_name: 'text.txt'
        #     file_path: ${{ github.workspace }}/text.txt
        #     initial_comment: 'Post by Thiri Naing'